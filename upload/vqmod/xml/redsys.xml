<modification>
	<id><![CDATA[Redsys]]></id>
	<version><![CDATA[1.0]]></version>
	<vqmver><![CDATA[2.1.5]]></vqmver>
	<author><![CDATA[Alberto Gonzalez de Dios (alberto@gonzalezdedios.es)]]></author>
	
	<file name="catalog/model/localisation/country.php">
		<operation>
			<search position="before"><![CDATA[public function getCountries() {]]></search>
			<add><![CDATA[
				public function getCountryByISO($iso_code_3) {
					$query = $this->db->query("SELECT name FROM " . DB_PREFIX . "country WHERE iso_code_3 LIKE '" . $iso_code_3 . "' AND status = '1'");
					
					return (isset($query->row['name'])) ? $query->row['name'] : '';
				}
			]]></add>
		</operation>
	</file>
	
	<file name="catalog/model/checkout/order.php">
		<operation>
			<search position="replace"><![CDATA[public function confirm($order_id, $order_status_id, $comment = '', $notify = false) {]]></search>
			<add><![CDATA[
				public function confirm($order_id, $order_status_id, $comment = '', $notify = false, $comment_for_admin = '') {
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[$text .= $language->get('text_new_order_status') . ' ' . $order_status . "\n\n";]]></search>
			<add><![CDATA[
				if(isset($adminEmail))
					$text .= $comment_for_admin . "\n\n";
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[if ($this->config->get('config_alert_mail')) {]]></search>
			<add><![CDATA[
				$adminEmail = true;
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[public function update($order_id, $order_status_id, $comment = '', $notify = false) {]]></search>
			<add><![CDATA[
				public function sendCustomerMail($order_id, $order_status_id, $comment_for_customer = '', $error = FALSE) {
					$order_info = $this->getOrder($order_id);
					$order_product_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_product WHERE order_id = '" . (int)$order_id . "'");
					$order_voucher_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_voucher WHERE order_id = '" . (int)$order_id . "'");
					$order_total_query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "order_total` WHERE order_id = '" . (int)$order_id . "' ORDER BY sort_order ASC");
					$order_download_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_download WHERE order_id = '" . (int)$order_id . "'");

					// Send out order confirmation mail
					$language = new Language($order_info['language_directory']);
					$language->load($order_info['language_filename']);
					$language->load('mail/order');
					$language->load('mail/error');
				 
					$order_status_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_status WHERE order_status_id = '" . (int)$order_status_id . "' AND language_id = '" . (int)$order_info['language_id'] . "'");
					
					if ($order_status_query->num_rows) {
						$order_status = $order_status_query->row['name'];	
					} else {
						$order_status = '';
					}

					// HTML Mail
					$template = new Template();
					
					if($error) {
						$subject = sprintf($language->get('text_new_subject_error'), $order_info['store_name'], $order_id);
						$template->data['title'] = sprintf($language->get('text_new_subject_error'), html_entity_decode($order_info['store_name'], ENT_QUOTES, 'UTF-8'));
						$template->data['text_greeting'] = sprintf($language->get('text_new_greeting_error'), html_entity_decode($order_info['store_name'], ENT_QUOTES, 'UTF-8'));
						$template->data['text_footer'] = sprintf($language->get('text_new_footer_error'), $order_info['store_url'] . 'index.php?route=information/contact');
						$template->data['text_link'] = '';
						$template->data['link'] = '';
					} else {
						$subject = sprintf($language->get('text_new_subject'), $order_info['store_name'], $order_id);
						$template->data['title'] = sprintf($language->get('text_new_subject'), html_entity_decode($order_info['store_name'], ENT_QUOTES, 'UTF-8'), $order_id);
						$template->data['text_greeting'] = sprintf($language->get('text_new_greeting'), html_entity_decode($order_info['store_name'], ENT_QUOTES, 'UTF-8'));
						$template->data['text_footer'] = $language->get('text_new_footer');
						$template->data['text_link'] = $language->get('text_new_link');
						$template->data['link'] = $order_info['store_url'] . 'index.php?route=account/order/info&order_id=' . $order_id;
					}
					
					$template->data['text_download'] = $language->get('text_new_download');
					$template->data['text_order_detail'] = $language->get('text_new_order_detail');
					$template->data['text_instruction'] = $language->get('text_new_instruction');
					$template->data['text_order_id'] = $language->get('text_new_order_id');
					$template->data['text_date_added'] = $language->get('text_new_date_added');
					$template->data['text_payment_method'] = $language->get('text_new_payment_method');	
					$template->data['text_shipping_method'] = $language->get('text_new_shipping_method');
					$template->data['text_email'] = $language->get('text_new_email');
					$template->data['text_telephone'] = $language->get('text_new_telephone');
					$template->data['text_ip'] = $language->get('text_new_ip');
					$template->data['text_payment_address'] = $language->get('text_new_payment_address');
					$template->data['text_shipping_address'] = $language->get('text_new_shipping_address');
					$template->data['text_product'] = $language->get('text_new_product');
					$template->data['text_model'] = $language->get('text_new_model');
					$template->data['text_quantity'] = $language->get('text_new_quantity');
					$template->data['text_price'] = $language->get('text_new_price');
					$template->data['text_total'] = $language->get('text_new_total');
					$template->data['text_powered'] = $language->get('text_new_powered');
					
					$template->data['logo'] = $this->config->get('config_url') . 'image/' . $this->config->get('config_logo');		
					$template->data['store_name'] = $order_info['store_name'];
					$template->data['store_url'] = $order_info['store_url'];
					$template->data['customer_id'] = $order_info['customer_id'];
					
					
					if ($order_download_query->num_rows) {
						$template->data['download'] = $order_info['store_url'] . 'index.php?route=account/download';
					} else {
						$template->data['download'] = '';
					}
					
					$template->data['order_id'] = $order_id;
					$template->data['date_added'] = date($language->get('date_format_short'), strtotime($order_info['date_added']));    	
					$template->data['payment_method'] = $order_info['payment_method'];
					$template->data['shipping_method'] = $order_info['shipping_method'];
					$template->data['email'] = $order_info['email'];
					$template->data['telephone'] = $order_info['telephone'];
					$template->data['ip'] = $order_info['ip'];
					$template->data['comment'] = nl2br($comment_for_customer);
								
					if ($order_info['payment_address_format']) {
						$format = $order_info['payment_address_format'];
					} else {
						$format = '{firstname} {lastname}' . "\n" . '{company}' . "\n" . '{address_1}' . "\n" . '{address_2}' . "\n" . '{city} {postcode}' . "\n" . '{zone}' . "\n" . '{country}';
					}
					
					$find = array(
						'{firstname}',
						'{lastname}',
						'{company}',
						'{address_1}',
						'{address_2}',
						'{city}',
						'{postcode}',
						'{zone}',
						'{zone_code}',
						'{country}'
					);
				
					$replace = array(
						'firstname' => $order_info['payment_firstname'],
						'lastname'  => $order_info['payment_lastname'],
						'company'   => $order_info['payment_company'],
						'address_1' => $order_info['payment_address_1'],
						'address_2' => $order_info['payment_address_2'],
						'city'      => $order_info['payment_city'],
						'postcode'  => $order_info['payment_postcode'],
						'zone'      => $order_info['payment_zone'],
						'zone_code' => $order_info['payment_zone_code'],
						'country'   => $order_info['payment_country']  
					);
				
					$template->data['payment_address'] = str_replace(array("\r\n", "\r", "\n"), '<br />', preg_replace(array("/\s\s+/", "/\r\r+/", "/\n\n+/"), '<br />', trim(str_replace($find, $replace, $format))));						
											
					if ($order_info['shipping_address_format']) {
						$format = $order_info['shipping_address_format'];
					} else {
						$format = '{firstname} {lastname}' . "\n" . '{company}' . "\n" . '{address_1}' . "\n" . '{address_2}' . "\n" . '{city} {postcode}' . "\n" . '{zone}' . "\n" . '{country}';
					}
					
					$find = array(
						'{firstname}',
						'{lastname}',
						'{company}',
						'{address_1}',
						'{address_2}',
						'{city}',
						'{postcode}',
						'{zone}',
						'{zone_code}',
						'{country}'
					);
				
					$replace = array(
						'firstname' => $order_info['shipping_firstname'],
						'lastname'  => $order_info['shipping_lastname'],
						'company'   => $order_info['shipping_company'],
						'address_1' => $order_info['shipping_address_1'],
						'address_2' => $order_info['shipping_address_2'],
						'city'      => $order_info['shipping_city'],
						'postcode'  => $order_info['shipping_postcode'],
						'zone'      => $order_info['shipping_zone'],
						'zone_code' => $order_info['shipping_zone_code'],
						'country'   => $order_info['shipping_country']  
					);
				
					$template->data['shipping_address'] = str_replace(array("\r\n", "\r", "\n"), '<br />', preg_replace(array("/\s\s+/", "/\r\r+/", "/\n\n+/"), '<br />', trim(str_replace($find, $replace, $format))));
					
					// Products
					$template->data['products'] = array();
						
					foreach ($order_product_query->rows as $product) {
						$option_data = array();
						
						$order_option_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_option WHERE order_id = '" . (int)$order_id . "' AND order_product_id = '" . (int)$product['order_product_id'] . "'");
						
						foreach ($order_option_query->rows as $option) {
							if ($option['type'] != 'file') {
								$value = $option['value'];
							} else {
								$value = utf8_substr($option['value'], 0, utf8_strrpos($option['value'], '.'));
							}
							
							$option_data[] = array(
								'name'  => $option['name'],
								'value' => (utf8_strlen($value) > 20 ? utf8_substr($value, 0, 20) . '..' : $value)
							);					
						}
					  
						$template->data['products'][] = array(
							'name'     => $product['name'],
							'model'    => $product['model'],
							'option'   => $option_data,
							'quantity' => $product['quantity'],
							'price'    => $this->currency->format($product['price'] + ($this->config->get('config_tax') ? $product['tax'] : 0), $order_info['currency_code'], $order_info['currency_value']),
							'total'    => $this->currency->format($product['total'] + ($this->config->get('config_tax') ? ($product['tax'] * $product['quantity']) : 0), $order_info['currency_code'], $order_info['currency_value'])
						);
					}

					// Vouchers
					$template->data['vouchers'] = array();
					
					foreach ($order_voucher_query->rows as $voucher) {
						$template->data['vouchers'][] = array(
							'description' => $voucher['description'],
							'amount'      => $this->currency->format($voucher['amount'], $order_info['currency_code'], $order_info['currency_value']),
						);
					}

					$template->data['totals'] = $order_total_query->rows;
					
					if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/mail/order.tpl')) {
						$html = $template->fetch($this->config->get('config_template') . '/template/mail/order.tpl');
					} else {
						$html = $template->fetch('default/template/mail/order.tpl');
					}
					
					// Text Mail
					$text = '';
					if($error) {
						$text  .= sprintf($language->get('text_new_greeting_error'), html_entity_decode($order_info['store_name'], ENT_QUOTES, 'UTF-8')) . "\n\n";
					} else {
						$text  .= sprintf($language->get('text_new_greeting'), html_entity_decode($order_info['store_name'], ENT_QUOTES, 'UTF-8')) . "\n\n";
					}
					$text .= $language->get('text_new_order_id') . ' ' . $order_id . "\n";
					$text .= $language->get('text_new_date_added') . ' ' . date($language->get('date_format_short'), strtotime($order_info['date_added'])) . "\n";
					$text .= $language->get('text_new_order_status') . ' ' . $order_status . "\n\n";
					
					if ($comment_for_customer) {
						$text .= $language->get('text_new_instruction') . "\n\n";
						$text .= $comment_for_customer . "\n\n";
					}
					
					// Products
					$text .= $language->get('text_new_products') . "\n";
					
					foreach ($order_product_query->rows as $product) {
						$text .= $product['quantity'] . 'x ' . $product['name'] . ' (' . $product['model'] . ') ' . html_entity_decode($this->currency->format($product['total'] + ($this->config->get('config_tax') ? ($product['tax'] * $product['quantity']) : 0), $order_info['currency_code'], $order_info['currency_value']), ENT_NOQUOTES, 'UTF-8') . "\n";
						
						$order_option_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_option WHERE order_id = '" . (int)$order_id . "' AND order_product_id = '" . $product['order_product_id'] . "'");
						
						foreach ($order_option_query->rows as $option) {
							$text .= chr(9) . '-' . $option['name'] . ' ' . (utf8_strlen($option['value']) > 20 ? utf8_substr($option['value'], 0, 20) . '..' : $option['value']) . "\n";
						}
					}
					
					foreach ($order_voucher_query->rows as $voucher) {
						$text .= '1x ' . $voucher['description'] . ' ' . $this->currency->format($voucher['amount'], $order_info['currency_code'], $order_info['currency_value']);
					}
								
					$text .= "\n";
					
					$text .= $language->get('text_new_order_total') . "\n";
					
					foreach ($order_total_query->rows as $total) {
						$text .= $total['title'] . ': ' . html_entity_decode($total['text'], ENT_NOQUOTES, 'UTF-8') . "\n";
					}			
					
					$text .= "\n";
					
					if ($order_info['customer_id']) {
						$text .= $language->get('text_new_link') . "\n";
						$text .= $order_info['store_url'] . 'index.php?route=account/order/info&order_id=' . $order_id . "\n\n";
					}
				
					if ($order_download_query->num_rows) {
						$text .= $language->get('text_new_download') . "\n";
						$text .= $order_info['store_url'] . 'index.php?route=account/download' . "\n\n";
					}
					
					if ($order_info['comment']) {
						$text .= $language->get('text_new_comment') . "\n\n";
						$text .= $order_info['comment'] . "\n\n";
					}
					
					$text .= $language->get('text_new_footer') . "\n\n";
				
					$this->sendMail($this->config->get('config_email'), $order_info['email'], $order_info['store_name'], $subject, $text, $html);
				}

				// Admin Alert Mail
				public function sendStoreOwnerMail($order_id, $order_status_id, $comment_for_store_owner = '', $error = FALSE) {
					if (!$this->config->get('config_alert_mail')) {
						return;
					}
					
					$order_info = $this->getOrder($order_id);
					$order_product_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_product WHERE order_id = '" . (int)$order_id . "'");
					$order_voucher_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_voucher WHERE order_id = '" . (int)$order_id . "'");
					$order_total_query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "order_total` WHERE order_id = '" . (int)$order_id . "' ORDER BY sort_order ASC");
					$order_download_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_download WHERE order_id = '" . (int)$order_id . "'");
					
					// Send out order confirmation mail
					$language = new Language($order_info['language_directory']);
					$language->load($order_info['language_filename']);
					$language->load('mail/order');
					$language->load('mail/error');
				 
					$order_status_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_status WHERE order_status_id = '" . (int)$order_status_id . "' AND language_id = '" . (int)$order_info['language_id'] . "'");
					
					if ($order_status_query->num_rows) {
						$order_status = $order_status_query->row['name'];	
					} else {
						$order_status = '';
					}
					
					// Text 
					$text = '';
					if($error) {
						$subject = sprintf($language->get('text_new_subject_error'), html_entity_decode($this->config->get('config_name'), ENT_QUOTES, 'UTF-8'), $order_id);
						$text  .= $language->get('text_new_received_error') . "\n\n";
					} else {
						$subject = sprintf($language->get('text_new_subject'), html_entity_decode($this->config->get('config_name'), ENT_QUOTES, 'UTF-8'), $order_id);
						$text  .= $language->get('text_new_received') . "\n\n";
					}
					$text .= $language->get('text_new_order_id') . ' ' . $order_id . "\n";
					$text .= $language->get('text_new_date_added') . ' ' . date($language->get('date_format_short'), strtotime($order_info['date_added'])) . "\n";
					$text .= $language->get('text_new_order_status') . ' ' . $order_status . "\n\n";
					$text .= $comment_for_store_owner . "\n\n";
					$text .= $language->get('text_new_products') . "\n";
					
					foreach ($order_product_query->rows as $product) {
						$text .= $product['quantity'] . 'x ' . $product['name'] . ' (' . $product['model'] . ') ' . html_entity_decode($this->currency->format($product['total'] + ($this->config->get('config_tax') ? ($product['tax'] * $product['quantity']) : 0), $order_info['currency_code'], $order_info['currency_value']), ENT_NOQUOTES, 'UTF-8') . "\n";
						
						$order_option_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_option WHERE order_id = '" . (int)$order_id . "' AND order_product_id = '" . $product['order_product_id'] . "'");
						
						foreach ($order_option_query->rows as $option) {
							if ($option['type'] != 'file') {
								$value = $option['value'];
							} else {
								$value = utf8_substr($option['value'], 0, utf8_strrpos($option['value'], '.'));
							}
												
							$text .= chr(9) . '-' . $option['name'] . ' ' . (utf8_strlen($value) > 20 ? utf8_substr($value, 0, 20) . '..' : $value) . "\n";
						}
					}
					
					foreach ($order_voucher_query->rows as $voucher) {
						$text .= '1x ' . $voucher['description'] . ' ' . $this->currency->format($voucher['amount'], $order_info['currency_code'], $order_info['currency_value']);
					}
								
					$text .= "\n";

					$text .= $language->get('text_new_order_total') . "\n";
					
					foreach ($order_total_query->rows as $total) {
						$text .= $total['title'] . ': ' . html_entity_decode($total['text'], ENT_NOQUOTES, 'UTF-8') . "\n";
					}			
					
					$text .= "\n";
					
					if ($order_info['comment']) {
						$text .= $language->get('text_new_comment') . "\n\n";
						$text .= $order_info['comment'] . "\n\n";
					}
				
					$this->sendMail($this->config->get('config_email'), $this->config->get('config_email'), $order_info['store_name'], $subject, $text);
					
					// Send to additional alert emails
					$emails = explode(',', $this->config->get('config_alert_emails'));
					
					foreach ($emails as $email) {
						if ($email && preg_match('/^[^\@]+@.*\.[a-z]{2,6}$/i', $email)) {
							$this->sendMail($this->config->get('config_email'), $email, $order_info['store_name'], $subject, $text);
						}
					}				
				}
				
				public function sendMail($from, $to, $sender, $subject, $message, $html = '') {
					$mail = new Mail();
					$mail->protocol = $this->config->get('config_mail_protocol');
					$mail->parameter = $this->config->get('config_mail_parameter');
					$mail->hostname = $this->config->get('config_smtp_host');
					$mail->username = $this->config->get('config_smtp_username');
					$mail->password = $this->config->get('config_smtp_password');
					$mail->port = $this->config->get('config_smtp_port');
					$mail->timeout = $this->config->get('config_smtp_timeout');				
					$mail->setTo($to);
					$mail->setFrom($from);
					$mail->setSender($sender);
					$mail->setSubject(html_entity_decode($subject, ENT_QUOTES, 'UTF-8'));
					if($html) $mail->setHtml($html);
					$mail->setText(html_entity_decode($message, ENT_QUOTES, 'UTF-8'));
					$mail->send();
				}
			]]></add>
		</operation>
	</file>
</modification>